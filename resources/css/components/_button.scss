@use "../design";

.button {
  --button-border-color: #{design.app-color-light('button-default-border-color')};
  position: relative;
  color: design.app-color-light('button-default-color');
  background-color: design.app-color-light('button-default-bg');
  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .05) 100%);
  padding: design.app-value('button-padding-vertical') design.app-value('button-padding-horizontal');
  border: design.app-value('button-border-width') solid var(--button-border-color);
  border-radius: design.app-value('button-border-radius');
  font-size: design.app-value('button-font-size');
  box-shadow: 0 design.app-value('button-shadow-size') 0 var(--button-border-color);
  will-change: transform;
  transition-property: transform, box-shadow, opacity, color, background-color, border-color;
  transition-duration: .1s;
  user-select: none;
  text-decoration: none !important;
  box-sizing: border-box;
  display: inline-block;
  cursor: pointer;
  transform: translateY(calc(#{design.app-value('button-shadow-size')} * -1));

  @include design.if-dark {
    color: design.app-color-dark('button-default-color');
    background-color: design.app-color-dark('button-default-bg');
    --button-border-color: #{design.app-color-dark('button-default-border-color')};
  }

  @include design.if-prefers-reduced-motion {
    transition: none !important;
  }

  &:focus {
    z-index: design.app-z-index('focus');
  }

  &:focus-visible {
    outline: design.app-value('focus-outline') solid var(--button-border-color);
  }

  &:disabled {
    background-image: linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, .05) 100%);
    cursor: not-allowed;

    .button-content {
      opacity: .5;
    }
  }

  &.icon-only {
    padding: design.app-value('button-padding-vertical');
  }

  &.visually-hidden {
    opacity: 0 !important;
  }

  &.justify-center .button-content {
    justify-content: center;
  }

  &.block {
    display: block;
    width: 100%;
  }

  &:not(:disabled):active, &.pressed {
    transform: translateY(0);
    box-shadow: 0 0 0 var(--button-border-color);
  }

  &.loading {
    cursor: wait;
  }

  @include design.button-color-variation('primary');
  @include design.button-color-variation('success');
  @include design.button-color-variation('danger');
  @include design.button-color-variation('warning');

  .loading-icon {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: linear-gradient(to right, transparent, var(--button-border-color), transparent);

    + .button-content {
      opacity: .2;
    }
  }

  .button-content {
    display: flex;
    justify-content: space-between;
    gap: design.app-value('button-content-gap');
    pointer-events: none;
  }
}

.button-group {
  display: flex;
  flex-flow: row nowrap;

  > .button {
    min-width: 0;
    flex-grow: 1;

    @include design.if-ltr {
      @include design.combined-border-radius;
    }

    @include design.if-rtl {
      @include design.combined-border-radius-inverted;
    }
  }
}
